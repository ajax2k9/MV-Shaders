// xs_begin
// arg : {id = '0' name = 'size' value = '2'   range = '1 128'    step = '1'    decimal = '0' }
// arg : {id = '1' name = 'border' value = '1'   range = '0 255'    step = '1'    decimal = '0' }
// author : 'Alex M'
// xs_end

//===== user args =====
// uniform float	i_args[8];

//===== built-in args =====
// uniform vec3		i_volume_size;	// volume size [1-256]
// uniform float	i_color_index;	// color index [0-255]
// uniform vec3		i_mirror;		// mirror mode [0,1]
// uniform vec3		i_axis;			// axis mode [0,1]
// uniform float	i_iter;			// iteration index

//===== built-in functions ===== 
// float voxel( vec3 v );			// get voxel color index at position v


float map( vec3 v ) {				// generate a new voxel color index at position v ( v is at the center of voxel, such as vec3( 1.5, 2.5, 4.5 ) )
    float offset = 0.0;
    float size = i_args[0];
    float border = i_args[1]; 
    if(border > 0.0){
        if(mod(v.z,size + border ) < border){
            if(mod(v.x,size + border ) < border) return i_color_index + 2; 
            if(mod(v.y,size + border ) < border) return i_color_index + 2;
        } 
         if(mod(v.x,size + border ) < border) { 
            if(mod(v.y,size + border ) < border) return i_color_index + 2;       
         }; 
    }
    
    size += border;
    if(mod(floor(v.x/size) + floor(v.y/size) + floor(v.z/size),2) == 0) return i_color_index;
    return i_color_index + 1;

}