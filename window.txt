// xs_begin
// author : 'Alex M'
// arg : {id = '0' name = 'rim color' value = '1'   range = '0 255'    step = '1'    decimal = '0' }
// arg : {id = '1' name = 'glass color' value = '2'   range = '0 255'    step = '1'    decimal = '0' }
// arg : {id = '2' name = 'streak color1' value = '3'   range = '0 255'    step = '1'    decimal = '0' }
// arg : {id = '3' name = 'streak color2' value = '4'   range = '0 255'    step = '1'    decimal = '0' }
// arg : {id = '4' name = 'spacing' value = '6'   range = '0 255'    step = '1'    decimal = '1' }
// xs_end

//===== user args =====
// uniform float	i_args[8];

//===== built-in args =====
// uniform vec3		i_volume_size;	// volume size [1-256]
// uniform float	i_color_index;	// color index [0-255]
// uniform vec3		i_mirror;		// mirror mode [0,1]
// uniform vec3		i_axis;			// axis mode [0,1]
// uniform float	i_iter;			// iteration index

//===== built-in functions ===== 
// float voxel( vec3 v );			// get voxel color index at position v



bool streak(vec3 v,float minY, float maxY, float zOffs){
    if(v.y >= minY && v.y <= maxY && v.y == v.z - zOffs){
        return true;
    }

    return false;
}

float map( vec3 v ) {				// generate a new voxel color index at position v ( v is at the center of voxel, such as vec3( 1.5, 2.5, 4.5 ) )
  vec3 f = floor(v);
  
  
      if(!(v.y > 1 && v.y < i_volume_size.y - 1 && v.z > 1 && v.z < i_volume_size.z - 1)){ // rim
          return i_args[0];
      } else if (f.x >= 1 && f.x < i_volume_size.x - 1){


          if(v.y > 1 && v.y < i_volume_size.y - 1 && v.z > 1 && v.z < i_volume_size.z - 1){ //glass
           
           int spacing = int(round(i_args[4]));
           bool _streak = mod(v.z + floor(v.y), spacing) <1.0;
           
            if(spacing > 0){
                if(_streak){
                    return i_args[3];
                }

                _streak = mod(v.z + floor(v.y) + spacing/2, spacing) <1.0;;
            
                if(_streak){
                    return i_args[2];
                }
            }

            return i_args[1];
          }
      }
     
      return 0.0;



  } 
