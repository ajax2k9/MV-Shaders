// xs_begin
// author : 'Alex M'
// xs_end

//===== user args =====
// uniform float	i_args[8];

//===== built-in args =====
// uniform vec3		i_volume_size;	// volume size [1-256]
// uniform float	i_color_index;	// color index [0-255]
// uniform vec3		i_mirror;		// mirror mode [0,1]
// uniform vec3		i_axis;			// axis mode [0,1]
// uniform float	i_iter;			// iteration index

//===== built-in functions ===== 
// float voxel( vec3 v );			// get voxel color index at position v


float random (vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))*
        43758.5453123);
}

float map( vec3 v ) {				// generate a new voxel color index at position v ( v is at the center of voxel, such as vec3( 1.5, 2.5, 4.5 ) )
    float offset = 0.0;

    if(mod(floor(v.z),6) <3){
        offset = 4.0;
    }
    
    if(v.x > 1 || mod(floor(v.z),3)==0 || mod(floor(v.y + offset),8) == 0){
        return 0.0;
    }

    float r = random(floor(vec2((v.y + offset)/8,v.z/3)));
       return i_color_index + floor(r * 2);

}